#!/bin/sh

ipurl=icanhazip.com
logupdates=false
ttl=300

check_domain() {
    echo "$1" | egrep -q '^([a-z0-9][a-z0-9-]*\.)*[a-z0-9][a-z0-9-]*$'
}

get_public_ip() {
    curl -s --interface "$(curl -s "$@" "$ipurl")" "$@" "$ipurl"
}

s() {
    "$@" > /dev/null
}

mkdir -p /etc/ddns
case "$1" in
    -h|--help|help|"")
	cat <<EOF
Usage: $0 [subcommand [arguments]]

Updates DNS entries via nsupdate using configured credentials in
/etc/ddns/ (the update directory).

	help		show this help message
	run		update each host setup in /etc/ddns/
	add HOSTNAME 	add HOSTNAME to /etc/ddns/
	delete HOSTNAME	remove HOSTNAME from /etc/ddns/
EOF
	;;
    add)
	check_domain "$2" || exit
	dnssec-keygen -a RSASHA512 -b 2048 -K /etc/ddns -T KEY -n HOST "$2"
	;;
    delete)
	check_domain "$2" || exit
	rm /etc/ddns/K"$2".+*
	;;
    run)
	for key in /etc/ddns/K*.key; do
	    # now we get the host from the KEY RR
	    host="$(cut -d ' ' -f 1 "$key")"

	    # now we update the host
	    {
		echo "ttl $ttl"

		# Check for IPv4 addresses that we can bind to and don't
		# go through NAT
		echo "delete $host A"
		if s get_public_ip -4; then
		    echo "add $host $ttl A $(get_public_ip -4)"
		fi

		# Check for IPv6 addresses that we can bind to and don't
		# go through NAT
		echo "delete $host AAAA"
		if s get_public_ip -6; then
		    echo "add $host $ttl AAAA $(get_public_ip -6)"
		fi

		echo "send"

		# email provisioning
		echo "delete $host MX"
		echo "delete $host TXT \"v=spf1 mx -all\""
		mxhost="$(postconf -h myhostname)"
		if s getent ahosts "$mxhost" && s systemctl is-active postfix; then
		    echo "add $host $ttl MX 10 $mxhost."
		    echo "add $host $ttl TXT \"v=spf1 mx -all\""
		fi

		# ssh keys
		echo "delete $host SSHFP"
		if s getent ahosts "$host" && s ssh-keygen -r ""; then
		    ssh-keygen -r "$host" | sed "s/.*/add &/"
		fi

		# log the update
		if "$logupdates"; then
		    echo "show"
		fi

		echo "send"
	    } | nsupdate -k "$key"
	done
	;;
esac
